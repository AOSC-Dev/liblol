From b220a209cd83c91302b1aa02ef3a3f14512887d6 Mon Sep 17 00:00:00 2001
From: Miao Wang <shankerwangmiao@gmail.com>
Date: Sun, 14 Jan 2024 08:41:15 +0800
Subject: [PATCH 07/11] add more pthread symbols

---
 nptl/old_pthread_cond_destroy.c            |  4 ++--
 nptl/old_pthread_cond_init.c               |  4 ++--
 nptl/pthread_attr_init.c                   |  6 +++---
 nptl/pthread_attr_setaffinity.c            | 10 +++++-----
 nptl/pthread_attr_setstack.c               |  4 ++--
 nptl/pthread_attr_setstacksize.c           |  2 +-
 nptl/pthread_cond_broadcast.c              |  2 +-
 nptl/pthread_cond_destroy.c                |  2 +-
 nptl/pthread_cond_init.c                   |  2 +-
 nptl/pthread_cond_wait.c                   |  4 ++--
 nptl/pthread_detach.c                      |  2 +-
 nptl/pthread_getaffinity.c                 | 10 +++++-----
 nptl/pthread_getattr_np.c                  |  6 +++---
 nptl/pthread_join.c                        |  4 ++--
 nptl/pthread_kill.c                        |  4 ++--
 nptl/pthread_mutex_destroy.c               |  2 +-
 nptl/pthread_mutexattr_destroy.c           |  6 +++---
 nptl/pthread_setattr_default_np.c          |  4 ++--
 nptl/pthread_sigmask.c                     |  6 +++---
 nptl/pthread_testcancel.c                  |  4 ++--
 nptl/pthread_tryjoin.c                     |  4 ++--
 sysdeps/loongarch/nptl/pthread_sigmask.c   | 10 +++++-----
 sysdeps/unix/sysv/linux/loongarch/Makefile |  4 ++++
 23 files changed, 55 insertions(+), 51 deletions(-)

diff --git a/nptl/old_pthread_cond_destroy.c b/nptl/old_pthread_cond_destroy.c
index 7e2ef61efe..dee1207398 100644
--- a/nptl/old_pthread_cond_destroy.c
+++ b/nptl/old_pthread_cond_destroy.c
@@ -20,7 +20,7 @@
 #include <shlib-compat.h>
 
 
-#if SHLIB_COMPAT(libc, GLIBC_2_0, GLIBC_2_3_2)
+#if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_0, GLIBC_2_3_2)
 int
 __pthread_cond_destroy_2_0 (pthread_cond_2_0_t *cond)
 {
@@ -29,6 +29,6 @@ __pthread_cond_destroy_2_0 (pthread_cond_2_0_t *cond)
 
   return 0;
 }
-compat_symbol (libc, __pthread_cond_destroy_2_0, pthread_cond_destroy,
+compat_symbol (libpthread, __pthread_cond_destroy_2_0, pthread_cond_destroy,
 	       GLIBC_2_0);
 #endif
diff --git a/nptl/old_pthread_cond_init.c b/nptl/old_pthread_cond_init.c
index e75d56fde4..2be90b1913 100644
--- a/nptl/old_pthread_cond_init.c
+++ b/nptl/old_pthread_cond_init.c
@@ -20,7 +20,7 @@
 #include <shlib-compat.h>
 
 
-#if SHLIB_COMPAT(libc, GLIBC_2_0, GLIBC_2_3_2)
+#if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_0, GLIBC_2_3_2)
 int
 __pthread_cond_init_2_0 (pthread_cond_2_0_t *cond,
 			 const pthread_condattr_t *cond_attr)
@@ -39,6 +39,6 @@ __pthread_cond_init_2_0 (pthread_cond_2_0_t *cond,
 
   return 0;
 }
-compat_symbol (libc, __pthread_cond_init_2_0, pthread_cond_init,
+compat_symbol (libpthread, __pthread_cond_init_2_0, pthread_cond_init,
 	       GLIBC_2_0);
 #endif
diff --git a/nptl/pthread_attr_init.c b/nptl/pthread_attr_init.c
index 9af4e873c3..39b64eb734 100644
--- a/nptl/pthread_attr_init.c
+++ b/nptl/pthread_attr_init.c
@@ -48,10 +48,10 @@ __pthread_attr_init (pthread_attr_t *attr)
   return 0;
 }
 libc_hidden_def (__pthread_attr_init)
-versioned_symbol (libc, __pthread_attr_init, pthread_attr_init, GLIBC_2_1);
+versioned_symbol (libpthread, __pthread_attr_init, pthread_attr_init, GLIBC_2_1);
 
 
-#if SHLIB_COMPAT(libc, GLIBC_2_0, GLIBC_2_1)
+#if OTHER_SHLIB_COMPAT(libpthread, GLIBC_2_0, GLIBC_2_1)
 int
 __pthread_attr_init_2_0 (pthread_attr_t *attr)
 {
@@ -80,5 +80,5 @@ __pthread_attr_init_2_0 (pthread_attr_t *attr)
      old attribute structure.  */
   return 0;
 }
-compat_symbol (libc, __pthread_attr_init_2_0, pthread_attr_init, GLIBC_2_0);
+compat_symbol (libpthread, __pthread_attr_init_2_0, pthread_attr_init, GLIBC_2_0);
 #endif
diff --git a/nptl/pthread_attr_setaffinity.c b/nptl/pthread_attr_setaffinity.c
index 0867037266..8aba389d9d 100644
--- a/nptl/pthread_attr_setaffinity.c
+++ b/nptl/pthread_attr_setaffinity.c
@@ -62,24 +62,24 @@ __pthread_attr_setaffinity_np (pthread_attr_t *attr, size_t cpusetsize,
   return 0;
 }
 libc_hidden_def (__pthread_attr_setaffinity_np)
-versioned_symbol (libc, __pthread_attr_setaffinity_np,
+versioned_symbol (libpthread, __pthread_attr_setaffinity_np,
 		  pthread_attr_setaffinity_np, GLIBC_2_32);
 
 
-#if SHLIB_COMPAT (libc, GLIBC_2_3_4, GLIBC_2_32)
+#if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_3_4, GLIBC_2_32)
 /* Compat symbol with the old libc version.  */
 strong_alias (__pthread_attr_setaffinity_np, __pthread_attr_setaffinity_alias)
-compat_symbol (libc, __pthread_attr_setaffinity_alias,
+compat_symbol (libpthread, __pthread_attr_setaffinity_alias,
 	       pthread_attr_setaffinity_np, GLIBC_2_3_4);
 #endif
 
-#if SHLIB_COMPAT (libc, GLIBC_2_3_3, GLIBC_2_3_4)
+#if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_3_3, GLIBC_2_3_4)
 int
 __pthread_attr_setaffinity_old (pthread_attr_t *attr, cpu_set_t *cpuset)
 {
   /* The old interface by default assumed a 1024 processor bitmap.  */
   return __pthread_attr_setaffinity_np (attr, 128, cpuset);
 }
-compat_symbol (libc, __pthread_attr_setaffinity_old,
+compat_symbol (libpthread, __pthread_attr_setaffinity_old,
 	       pthread_attr_setaffinity_np, GLIBC_2_3_3);
 #endif
diff --git a/nptl/pthread_attr_setstack.c b/nptl/pthread_attr_setstack.c
index 6efbbfee80..d569f2df90 100644
--- a/nptl/pthread_attr_setstack.c
+++ b/nptl/pthread_attr_setstack.c
@@ -53,10 +53,10 @@ __pthread_attr_setstack (pthread_attr_t *attr, void *stackaddr,
 
   return 0;
 }
-versioned_symbol (libc, __pthread_attr_setstack, pthread_attr_setstack,
+versioned_symbol (libpthread, __pthread_attr_setstack, pthread_attr_setstack,
 		  GLIBC_2_34);
 
-#if PTHREAD_STACK_MIN == 16384
+#if PTHREAD_STACK_MIN == 16384 && !defined(COMP_CHANGED_PTHREAD_STACK_MIN)
 # if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_2, GLIBC_2_34)
 compat_symbol (libpthread, __pthread_attr_setstack, pthread_attr_setstack,
 	       GLIBC_2_2);
diff --git a/nptl/pthread_attr_setstacksize.c b/nptl/pthread_attr_setstacksize.c
index e7812d269c..6e2dec44c6 100644
--- a/nptl/pthread_attr_setstacksize.c
+++ b/nptl/pthread_attr_setstacksize.c
@@ -45,7 +45,7 @@ versioned_symbol (libc, __pthread_attr_setstacksize,
 		  pthread_attr_setstacksize, GLIBC_2_34);
 
 
-#if PTHREAD_STACK_MIN == 16384
+#if PTHREAD_STACK_MIN == 16384 && !defined(COMP_CHANGED_PTHREAD_STACK_MIN)
 # if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_1, GLIBC_2_34)
 compat_symbol (libpthread, __pthread_attr_setstacksize,
 	       pthread_attr_setstacksize, GLIBC_2_1);
diff --git a/nptl/pthread_cond_broadcast.c b/nptl/pthread_cond_broadcast.c
index 12e2687c58..55fac56b1c 100644
--- a/nptl/pthread_cond_broadcast.c
+++ b/nptl/pthread_cond_broadcast.c
@@ -86,7 +86,7 @@ ___pthread_cond_broadcast (pthread_cond_t *cond)
 
   return 0;
 }
-versioned_symbol (libc, ___pthread_cond_broadcast,
+versioned_symbol (libpthread, ___pthread_cond_broadcast,
 		  pthread_cond_broadcast, GLIBC_2_3_2);
 libc_hidden_ver (___pthread_cond_broadcast, __pthread_cond_broadcast)
 #ifndef SHARED
diff --git a/nptl/pthread_cond_destroy.c b/nptl/pthread_cond_destroy.c
index c504a96031..f5b13cb1a4 100644
--- a/nptl/pthread_cond_destroy.c
+++ b/nptl/pthread_cond_destroy.c
@@ -58,5 +58,5 @@ __pthread_cond_destroy (pthread_cond_t *cond)
   return 0;
 }
 libc_hidden_def (__pthread_cond_destroy)
-versioned_symbol (libc, __pthread_cond_destroy,
+versioned_symbol (libpthread, __pthread_cond_destroy,
 		  pthread_cond_destroy, GLIBC_2_3_2);
diff --git a/nptl/pthread_cond_init.c b/nptl/pthread_cond_init.c
index d3285b10e5..a4bc15115c 100644
--- a/nptl/pthread_cond_init.c
+++ b/nptl/pthread_cond_init.c
@@ -49,5 +49,5 @@ __pthread_cond_init (pthread_cond_t *cond, const pthread_condattr_t *cond_attr)
   return 0;
 }
 libc_hidden_def (__pthread_cond_init)
-versioned_symbol (libc, __pthread_cond_init,
+versioned_symbol (libpthread, __pthread_cond_init,
 		  pthread_cond_init, GLIBC_2_3_2);
diff --git a/nptl/pthread_cond_wait.c b/nptl/pthread_cond_wait.c
index f915873f8c..e42ec786fe 100644
--- a/nptl/pthread_cond_wait.c
+++ b/nptl/pthread_cond_wait.c
@@ -458,7 +458,7 @@ ___pthread_cond_wait (pthread_cond_t *cond, pthread_mutex_t *mutex)
   return __pthread_cond_wait_common (cond, mutex, 0, NULL);
 }
 
-versioned_symbol (libc, ___pthread_cond_wait, pthread_cond_wait,
+versioned_symbol (libpthread, ___pthread_cond_wait, pthread_cond_wait,
 		  GLIBC_2_3_2);
 libc_hidden_ver (___pthread_cond_wait, __pthread_cond_wait)
 #ifndef SHARED
@@ -498,7 +498,7 @@ ___pthread_cond_timedwait (pthread_cond_t *cond, pthread_mutex_t *mutex,
   return __pthread_cond_timedwait64 (cond, mutex, &ts64);
 }
 #endif /* __TIMESIZE == 64 */
-versioned_symbol (libc, ___pthread_cond_timedwait,
+versioned_symbol (libpthread, ___pthread_cond_timedwait,
 		  pthread_cond_timedwait, GLIBC_2_3_2);
 libc_hidden_ver (___pthread_cond_timedwait, __pthread_cond_timedwait)
 #ifndef SHARED
diff --git a/nptl/pthread_detach.c b/nptl/pthread_detach.c
index 3bbc037bdc..df4248fb8c 100644
--- a/nptl/pthread_detach.c
+++ b/nptl/pthread_detach.c
@@ -59,5 +59,5 @@ strong_alias (___pthread_detach, __pthread_detach)
 #endif
 
 #if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_0, GLIBC_2_34)
-compat_symbol (libc, ___pthread_detach, pthread_detach, GLIBC_2_0);
+compat_symbol (libpthread, ___pthread_detach, pthread_detach, GLIBC_2_0);
 #endif
diff --git a/nptl/pthread_getaffinity.c b/nptl/pthread_getaffinity.c
index 0828185fbd..0daf039ed4 100644
--- a/nptl/pthread_getaffinity.c
+++ b/nptl/pthread_getaffinity.c
@@ -41,22 +41,22 @@ __pthread_getaffinity_np (pthread_t th, size_t cpusetsize, cpu_set_t *cpuset)
   return 0;
 }
 libc_hidden_def (__pthread_getaffinity_np)
-versioned_symbol (libc, __pthread_getaffinity_np, pthread_getaffinity_np,
+versioned_symbol (libpthread, __pthread_getaffinity_np, pthread_getaffinity_np,
 		  GLIBC_2_32);
 
-#if SHLIB_COMPAT (libc, GLIBC_2_3_4, GLIBC_2_32)
+#if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_3_4, GLIBC_2_32)
 strong_alias (__pthread_getaffinity_np, __pthread_getaffinity_alias)
-compat_symbol (libc, __pthread_getaffinity_alias, pthread_getaffinity_np,
+compat_symbol (libpthread, __pthread_getaffinity_alias, pthread_getaffinity_np,
 	       GLIBC_2_3_4);
 #endif
 
-#if SHLIB_COMPAT (libc, GLIBC_2_3_3, GLIBC_2_3_4)
+#if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_3_3, GLIBC_2_3_4)
 int
 __pthread_getaffinity_old (pthread_t th, cpu_set_t *cpuset)
 {
   /* The old interface by default assumed a 1024 processor bitmap.  */
   return __pthread_getaffinity_np (th, 128, cpuset);
 }
-compat_symbol (libc, __pthread_getaffinity_old, pthread_getaffinity_np,
+compat_symbol (libpthread, __pthread_getaffinity_old, pthread_getaffinity_np,
 	       GLIBC_2_3_3);
 #endif
diff --git a/nptl/pthread_getattr_np.c b/nptl/pthread_getattr_np.c
index e98e2df152..7771542490 100644
--- a/nptl/pthread_getattr_np.c
+++ b/nptl/pthread_getattr_np.c
@@ -205,10 +205,10 @@ __pthread_getattr_np (pthread_t thread_id, pthread_attr_t *attr)
 
   return ret;
 }
-versioned_symbol (libc, __pthread_getattr_np, pthread_getattr_np, GLIBC_2_32);
+versioned_symbol (libpthread, __pthread_getattr_np, pthread_getattr_np, GLIBC_2_32);
 
-#if SHLIB_COMPAT (libc, GLIBC_2_2_3, GLIBC_2_32)
+#if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_2_3, GLIBC_2_32)
 strong_alias (__pthread_getattr_np, __pthread_getattr_np_alias)
-compat_symbol (libc, __pthread_getattr_np_alias,
+compat_symbol (libpthread, __pthread_getattr_np_alias,
 	       pthread_getattr_np, GLIBC_2_2_3);
 #endif
diff --git a/nptl/pthread_join.c b/nptl/pthread_join.c
index cf8e56c8cf..c07cf6196b 100644
--- a/nptl/pthread_join.c
+++ b/nptl/pthread_join.c
@@ -24,12 +24,12 @@ ___pthread_join (pthread_t threadid, void **thread_return)
   return __pthread_clockjoin_ex (threadid, thread_return, 0 /* Ignored */,
 				 NULL, true);
 }
-versioned_symbol (libc, ___pthread_join, pthread_join, GLIBC_2_34);
+versioned_symbol (libpthread, ___pthread_join, pthread_join, GLIBC_2_34);
 libc_hidden_ver (___pthread_join, __pthread_join)
 #ifndef SHARED
 strong_alias (___pthread_join, __pthread_join)
 #endif
 
 #if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_0, GLIBC_2_34)
-compat_symbol (libc, ___pthread_join, pthread_join, GLIBC_2_0);
+compat_symbol (libpthread, ___pthread_join, pthread_join, GLIBC_2_0);
 #endif
diff --git a/nptl/pthread_kill.c b/nptl/pthread_kill.c
index 3938e3f8cd..9a97efcbbe 100644
--- a/nptl/pthread_kill.c
+++ b/nptl/pthread_kill.c
@@ -104,7 +104,7 @@ __pthread_kill (pthread_t threadid, int signo)
    avoid the symbol version if it ends up being used on ld.so.  */
 #if !IS_IN(rtld)
 libc_hidden_def (__pthread_kill)
-versioned_symbol (libc, __pthread_kill, pthread_kill, GLIBC_2_34);
+versioned_symbol (libpthread, __pthread_kill, pthread_kill, GLIBC_2_34);
 
 # if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_0, GLIBC_2_34)
 /* Variant which returns ESRCH in the no-TID case, for backwards
@@ -118,6 +118,6 @@ __pthread_kill_esrch (pthread_t threadid, int signo)
 
   return __pthread_kill_implementation (threadid, signo, ESRCH);
 }
-compat_symbol (libc, __pthread_kill_esrch, pthread_kill, GLIBC_2_0);
+compat_symbol (libpthread, __pthread_kill_esrch, pthread_kill, GLIBC_2_0);
 # endif
 #endif
diff --git a/nptl/pthread_mutex_destroy.c b/nptl/pthread_mutex_destroy.c
index 94f50accf0..a19e2e5e3f 100644
--- a/nptl/pthread_mutex_destroy.c
+++ b/nptl/pthread_mutex_destroy.c
@@ -40,7 +40,7 @@ ___pthread_mutex_destroy (pthread_mutex_t *mutex)
 
   return 0;
 }
-versioned_symbol (libc, ___pthread_mutex_destroy, pthread_mutex_destroy,
+versioned_symbol (libpthread, ___pthread_mutex_destroy, pthread_mutex_destroy,
                   GLIBC_2_0);
 libc_hidden_ver (___pthread_mutex_destroy, __pthread_mutex_destroy)
 #ifndef SHARED
diff --git a/nptl/pthread_mutexattr_destroy.c b/nptl/pthread_mutexattr_destroy.c
index 90b51ec6e0..b4f1b3040a 100644
--- a/nptl/pthread_mutexattr_destroy.c
+++ b/nptl/pthread_mutexattr_destroy.c
@@ -23,11 +23,11 @@ ___pthread_mutexattr_destroy (pthread_mutexattr_t *attr)
 {
   return 0;
 }
-versioned_symbol (libc, ___pthread_mutexattr_destroy,
+versioned_symbol (libpthread, ___pthread_mutexattr_destroy,
                   pthread_mutexattr_destroy, GLIBC_2_34);
 #if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_0, GLIBC_2_34)
-compat_symbol (libc, ___pthread_mutexattr_destroy,
+compat_symbol (libpthread, ___pthread_mutexattr_destroy,
                pthread_mutexattr_destroy, GLIBC_2_0);
-compat_symbol (libc, ___pthread_mutexattr_destroy,
+compat_symbol (libpthread, ___pthread_mutexattr_destroy,
                __pthread_mutexattr_destroy, GLIBC_2_0);
 #endif
diff --git a/nptl/pthread_setattr_default_np.c b/nptl/pthread_setattr_default_np.c
index 75df86893a..fe2a8a93fd 100644
--- a/nptl/pthread_setattr_default_np.c
+++ b/nptl/pthread_setattr_default_np.c
@@ -81,10 +81,10 @@ __pthread_setattr_default_np (const pthread_attr_t *in)
   lll_unlock (__default_pthread_attr_lock, LLL_PRIVATE);
   return ret;
 }
-versioned_symbol (libc, __pthread_setattr_default_np,
+versioned_symbol (libpthread, __pthread_setattr_default_np,
 		  pthread_setattr_default_np, GLIBC_2_34);
 #if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_18, GLIBC_2_34)
-compat_symbol (libc, __pthread_setattr_default_np,
+compat_symbol (libpthread, __pthread_setattr_default_np,
 	       pthread_setattr_default_np, GLIBC_2_18);
 #endif
 
diff --git a/nptl/pthread_sigmask.c b/nptl/pthread_sigmask.c
index 752fd17977..6302443a79 100644
--- a/nptl/pthread_sigmask.c
+++ b/nptl/pthread_sigmask.c
@@ -46,8 +46,8 @@ __pthread_sigmask (int how, const sigset_t *newmask, sigset_t *oldmask)
 }
 libc_hidden_def (__pthread_sigmask)
 
-versioned_symbol (libc, __pthread_sigmask, pthread_sigmask, GLIBC_2_32);
-#if SHLIB_COMPAT (libc, GLIBC_2_0, GLIBC_2_32)
+versioned_symbol (libpthread, __pthread_sigmask, pthread_sigmask, GLIBC_2_32);
+#if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_0, GLIBC_2_32)
 strong_alias (__pthread_sigmask, __pthread_sigmask_2);
-compat_symbol (libc, __pthread_sigmask_2, pthread_sigmask, GLIBC_2_0);
+compat_symbol (libpthread, __pthread_sigmask_2, pthread_sigmask, GLIBC_2_0);
 #endif
diff --git a/nptl/pthread_testcancel.c b/nptl/pthread_testcancel.c
index a4e71992ea..e5a35e4e8d 100644
--- a/nptl/pthread_testcancel.c
+++ b/nptl/pthread_testcancel.c
@@ -27,12 +27,12 @@ ___pthread_testcancel (void)
   if (cancel_enabled_and_canceled (cancelhandling))
     __do_cancel (PTHREAD_CANCELED);
 }
-versioned_symbol (libc, ___pthread_testcancel, pthread_testcancel, GLIBC_2_34);
+versioned_symbol (libpthread, ___pthread_testcancel, pthread_testcancel, GLIBC_2_34);
 libc_hidden_ver (___pthread_testcancel, __pthread_testcancel)
 #ifndef SHARED
 strong_alias (___pthread_testcancel, __pthread_testcancel)
 #endif
 
 #if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_0, GLIBC_2_34)
-compat_symbol (libc, ___pthread_testcancel, pthread_testcancel, GLIBC_2_0);
+compat_symbol (libpthread, ___pthread_testcancel, pthread_testcancel, GLIBC_2_0);
 #endif
diff --git a/nptl/pthread_tryjoin.c b/nptl/pthread_tryjoin.c
index 54b528fd19..dcbda41cc4 100644
--- a/nptl/pthread_tryjoin.c
+++ b/nptl/pthread_tryjoin.c
@@ -31,8 +31,8 @@ __pthread_tryjoin_np (pthread_t threadid, void **thread_return)
   return __pthread_clockjoin_ex (threadid, thread_return, 0 /* Ignored */,
 				 NULL, false);
 }
-versioned_symbol (libc, __pthread_tryjoin_np, pthread_tryjoin_np, GLIBC_2_34);
+versioned_symbol (libpthread, __pthread_tryjoin_np, pthread_tryjoin_np, GLIBC_2_34);
 
 #if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_3_3, GLIBC_2_34)
-compat_symbol (libc, __pthread_tryjoin_np, pthread_tryjoin_np, GLIBC_2_3_3);
+compat_symbol (libpthread, __pthread_tryjoin_np, pthread_tryjoin_np, GLIBC_2_3_3);
 #endif
diff --git a/sysdeps/loongarch/nptl/pthread_sigmask.c b/sysdeps/loongarch/nptl/pthread_sigmask.c
index d69470002a..707787a67a 100644
--- a/sysdeps/loongarch/nptl/pthread_sigmask.c
+++ b/sysdeps/loongarch/nptl/pthread_sigmask.c
@@ -48,7 +48,7 @@ libc_hidden_def (__pthread_sigmask)
 
 versioned_symbol (libc, __pthread_sigmask, pthread_sigmask, GLIBC_2_36);
 
-#if SHLIB_COMPAT (libc, GLIBC_2_0, GLIBC_2_36)
+#if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_0, GLIBC_2_36)
 
 #include<sysdeps/unix/sysv/linux/loongarch/ow_sigop.h>
 
@@ -61,13 +61,13 @@ __ow___pthread_sigmask (int how, const sigset_t *newmask, sigset_t *oldmask)
   }
   return rc;
 }
-#if SHLIB_COMPAT (libc, GLIBC_2_32, GLIBC_2_36)
-compat_symbol (libc, __ow___pthread_sigmask, pthread_sigmask, GLIBC_2_32);
+#if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_32, GLIBC_2_36)
+compat_symbol (libpthread, __ow___pthread_sigmask, pthread_sigmask, GLIBC_2_32);
 #endif
 
-#if SHLIB_COMPAT (libc, GLIBC_2_0, GLIBC_2_32)
+#if OTHER_SHLIB_COMPAT (libpthread, GLIBC_2_0, GLIBC_2_32)
 strong_alias (__ow___pthread_sigmask, __ow___pthread_sigmask_2);
-compat_symbol (libc, __ow___pthread_sigmask_2, pthread_sigmask, GLIBC_2_0);
+compat_symbol (libpthread, __ow___pthread_sigmask_2, pthread_sigmask, GLIBC_2_0);
 #endif
 
 #endif
diff --git a/sysdeps/unix/sysv/linux/loongarch/Makefile b/sysdeps/unix/sysv/linux/loongarch/Makefile
index 1d447ea4b8..4d1d5d0e6d 100644
--- a/sysdeps/unix/sysv/linux/loongarch/Makefile
+++ b/sysdeps/unix/sysv/linux/loongarch/Makefile
@@ -21,6 +21,10 @@ sysdep_routines += \
   # sysdep_routines
 endif
 
+ifeq ($(subdir),nptl)
+sysdep-CFLAGS += -DCOMP_CHANGED_PTHREAD_STACK_MIN
+endif
+
 abi-variants := lp64s lp64d
 
 ifeq (,$(filter $(default-abi),$(abi-variants)))
-- 
2.48.1

