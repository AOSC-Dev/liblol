From d55a93c9639ea23d9b62a1d01cadedefeefb67ae Mon Sep 17 00:00:00 2001
From: Miao Wang <shankerwangmiao@gmail.com>
Date: Sat, 13 Jan 2024 03:23:48 +0800
Subject: [PATCH 01/10] add old world abi compatibility

---
 login/Makefile                                |   8 +-
 nptl/Versions                                 | 261 ++++++++++++++++++
 scripts/firstversions.awk                     |   9 +-
 scripts/versions.awk                          |   2 +-
 sunrpc/Makefile                               |   4 +-
 sysdeps/nptl/Makeconfig                       |   1 +
 sysdeps/unix/sysv/linux/loongarch/Versions    |  36 +++
 .../unix/sysv/linux/loongarch/shlib-versions  |  11 +-
 sysdeps/unix/sysv/linux/loongarch/statx_cp.c  |   4 +
 9 files changed, 319 insertions(+), 17 deletions(-)
 create mode 100644 sysdeps/unix/sysv/linux/loongarch/Versions
 create mode 100644 sysdeps/unix/sysv/linux/loongarch/statx_cp.c

diff --git a/login/Makefile b/login/Makefile
index 74216cbc..5f5f2427 100644
--- a/login/Makefile
+++ b/login/Makefile
@@ -49,7 +49,7 @@ tests := tst-utmp tst-utmpx tst-grantpt tst-ptsname tst-getlogin tst-updwtmpx \
 # Empty compatibility library for old binaries.
 extra-libs      := libutil
 extra-libs-others := $(extra-libs)
-ifeq ($(have-GLIBC_2.33),yes)
+#ifeq ($(have-GLIBC_2.33),yes)
 libutil-routines := libutil-compat
 libutil-shared-only-routines := libutil-compat
 
@@ -57,9 +57,9 @@ libutil-shared-only-routines := libutil-compat
 # link is not installed.
 install-lib-ldscripts = libutil.so
 $(inst_libdir)/libutil.so:
-else  # not $(have-GLIBC_2.33)
-libutil-inhibit-o = $(filter-out .o,$(object-suffixes))
-endif # $(have-GLIBC_2.33)
+#else  # not $(have-GLIBC_2.33)
+#libutil-inhibit-o = $(filter-out .o,$(object-suffixes))
+#endif # $(have-GLIBC_2.33)
 
 include ../Rules
 
diff --git a/nptl/Versions b/nptl/Versions
index 3221de89..a0df5497 100644
--- a/nptl/Versions
+++ b/nptl/Versions
@@ -533,3 +533,264 @@ ld {
      __nptl_set_robust_list_avail;
   }
 }
+
+libpthread_in_libc {
+  GLIBC_2.0 {
+    pthread_create; pthread_join;
+    pthread_exit; pthread_detach;
+
+    pthread_mutex_init; pthread_mutex_destroy;
+    pthread_mutex_lock; pthread_mutex_trylock; pthread_mutex_unlock;
+
+    pthread_mutexattr_init; pthread_mutexattr_destroy;
+
+    pthread_cond_wait; pthread_cond_timedwait;
+    pthread_cond_signal; pthread_cond_broadcast;
+
+    pthread_cancel; pthread_testcancel;
+    pthread_setcancelstate; pthread_setcanceltype;
+
+    pthread_sigmask; pthread_kill;
+
+    pthread_key_create; pthread_key_delete;
+    pthread_getspecific; pthread_setspecific;
+
+    pthread_once;
+
+    pthread_atfork;
+
+    flockfile; funlockfile; ftrylockfile;
+
+    # Non-standard POSIX1.x functions.
+    pthread_mutexattr_getkind_np; pthread_mutexattr_setkind_np;
+
+    # Protected names for functions used in other shared objects.
+    __pthread_mutex_init; __pthread_mutex_destroy;
+    __pthread_mutex_lock; __pthread_mutex_trylock; __pthread_mutex_unlock;
+    __pthread_mutexattr_init; __pthread_mutexattr_destroy;
+    __pthread_mutexattr_settype;
+    __pthread_key_create; __pthread_getspecific; __pthread_setspecific;
+    __pthread_once; __pthread_atfork;
+    _IO_flockfile; _IO_ftrylockfile; _IO_funlockfile;
+
+    # Semaphores.
+    sem_destroy; sem_getvalue; sem_init; sem_post; sem_trywait; sem_wait;
+
+    # Special fork handling.
+    fork; __fork;
+
+    # Cancellation points.
+    close; __close; fcntl; __fcntl; read; __read; write; __write; accept;
+    connect; __connect; recv; recvfrom; recvmsg; send; __send; sendmsg; sendto;
+    fsync; lseek; __lseek; msync; open; __open; pause; tcdrain;
+    system;
+    nanosleep; wait; __wait; waitpid;
+
+    # Hidden entry point (through macros).
+    _pthread_cleanup_push; _pthread_cleanup_pop;
+    _pthread_cleanup_push_defer; _pthread_cleanup_pop_restore;
+
+    pthread_kill_other_threads_np;
+
+    # The error functions.
+    __errno_location; __h_errno_location;
+
+    # Functions which previously have been overwritten.
+    sigwait; sigaction; __sigaction; _exit; _Exit; longjmp; siglongjmp;
+    raise;
+
+    #Additional
+    pthread_attr_destroy; pthread_attr_getdetachstate;
+    pthread_attr_getinheritsched; pthread_attr_getschedparam;
+    pthread_attr_getschedpolicy; pthread_attr_getscope; pthread_attr_init;
+    pthread_attr_setdetachstate; pthread_attr_setinheritsched;
+    pthread_attr_setschedparam; pthread_attr_setschedpolicy;
+    pthread_attr_setscope; pthread_cond_destroy; pthread_cond_init;
+    pthread_condattr_destroy;
+    pthread_condattr_init; pthread_equal; pthread_getschedparam; pthread_self;
+    pthread_setschedparam;
+  }
+
+  GLIBC_2.1 {
+    pthread_create;
+
+    pthread_attr_getguardsize; pthread_attr_setguardsize;
+    pthread_attr_getstackaddr; pthread_attr_setstackaddr;
+    pthread_attr_getstacksize; pthread_attr_setstacksize;
+
+    pthread_mutexattr_gettype; pthread_mutexattr_settype;
+
+    pthread_rwlock_init; pthread_rwlock_destroy;
+    pthread_rwlock_rdlock; pthread_rwlock_wrlock; pthread_rwlock_unlock;
+    pthread_rwlock_tryrdlock; pthread_rwlock_trywrlock;
+
+    pthread_rwlockattr_init; pthread_rwlockattr_destroy;
+    pthread_rwlockattr_getpshared; pthread_rwlockattr_setpshared;
+    pthread_rwlockattr_getkind_np; pthread_rwlockattr_setkind_np;
+
+    pthread_getconcurrency; pthread_setconcurrency;
+
+    # Semaphores.
+    sem_destroy; sem_getvalue; sem_init; sem_post; sem_trywait; sem_wait;
+
+    __libc_current_sigrtmin; __libc_current_sigrtmax;
+    __libc_allocate_rtsig;
+  }
+
+  GLIBC_2.1.1 {
+    sem_close; sem_open; sem_unlink;
+  }
+
+  GLIBC_2.1.2 {
+    __libpthread_version_placeholder;
+  }
+
+  GLIBC_2.2 {
+    pthread_mutexattr_getpshared; pthread_mutexattr_setpshared;
+
+    pthread_condattr_getpshared; pthread_condattr_setpshared;
+
+    # New functions from IEEE Std. 1003.1-2001.
+    pthread_mutex_timedlock;
+
+    pthread_rwlock_timedrdlock; pthread_rwlock_timedwrlock;
+
+    pthread_attr_getstack; pthread_attr_setstack;
+
+    pthread_spin_destroy; pthread_spin_init; pthread_spin_lock;
+    pthread_spin_trylock; pthread_spin_unlock;
+
+    pthread_barrier_init; pthread_barrier_destroy; pthread_barrier_wait;
+    pthread_barrierattr_destroy; pthread_barrierattr_init;
+    pthread_barrierattr_setpshared;
+
+    sem_timedwait;
+
+    pthread_yield;
+
+    pthread_getcpuclockid;
+
+    # Cancellation points.
+    lseek64; open64; __open64; pread; pread64; __pread64; pwrite; pwrite64;
+    __pwrite64;
+
+    # Names used internally.
+    __pthread_rwlock_init; __pthread_rwlock_destroy;
+    __pthread_rwlock_rdlock; __pthread_rwlock_tryrdlock;
+    __pthread_rwlock_wrlock; __pthread_rwlock_trywrlock;
+    __pthread_rwlock_unlock;
+
+    __res_state;
+
+    # Additional
+    pthread_attr_init;
+  }
+
+  GLIBC_2.2.3 {
+    __libpthread_version_placeholder;
+
+    # Additional
+    pthread_getattr_np;
+  }
+
+  GLIBC_2.2.6 {
+    __libpthread_version_placeholder;
+
+    # Additional
+    __nanosleep;
+  }
+
+  GLIBC_2.3.2 {
+    # Changed pthread_cond_t.
+    pthread_cond_init;
+    pthread_cond_wait; pthread_cond_timedwait;
+    pthread_cond_signal; pthread_cond_broadcast;
+
+    # Additional
+    pthread_cond_destroy;
+  }
+
+  GLIBC_2.3.3 {
+    # 1003.1-2001 function accidentally left out in 2.2.
+    pthread_barrierattr_getpshared;
+
+    # Unix CS option.
+    pthread_condattr_getclock; pthread_condattr_setclock;
+
+    # Proposed API extensions.
+    pthread_tryjoin_np; pthread_timedjoin_np;
+
+    # New cancellation cleanup handling.
+    __pthread_register_cancel; __pthread_unregister_cancel;
+    __pthread_register_cancel_defer; __pthread_unregister_cancel_restore;
+    __pthread_unwind_next;
+    __pthread_cleanup_routine;
+
+    # affinity interfaces without size parameter
+    pthread_setaffinity_np;
+    pthread_attr_getaffinity_np;
+
+    # Additional
+    pthread_attr_setaffinity_np; pthread_attr_setstack;
+    pthread_attr_setstacksize; pthread_getaffinity_np;
+  }
+
+  GLIBC_2.3.4 {
+    # New affinity interfaces.
+    pthread_getaffinity_np; pthread_setaffinity_np;
+    pthread_attr_getaffinity_np;
+
+    pthread_setschedprio;
+
+    # Additional
+    pthread_attr_setaffinity_np;
+  }
+
+  GLIBC_2.4 {
+    pthread_mutexattr_getrobust_np; pthread_mutexattr_setrobust_np;
+    pthread_mutex_consistent_np;
+    pthread_mutexattr_getprotocol; pthread_mutexattr_setprotocol;
+    pthread_mutexattr_getprioceiling; pthread_mutexattr_setprioceiling;
+    pthread_mutex_getprioceiling; pthread_mutex_setprioceiling;
+  };
+
+  GLIBC_2.11 {
+    pthread_sigqueue;
+  };
+
+  GLIBC_2.12 {
+    pthread_mutex_consistent; pthread_mutexattr_getrobust;
+    pthread_mutexattr_setrobust;
+
+    pthread_setname_np; pthread_getname_np;
+  };
+
+  GLIBC_2.18 {
+    pthread_getattr_default_np;
+    pthread_setattr_default_np;
+  }
+
+  GLIBC_2.20 {
+  }
+
+  GLIBC_2.22 {
+  }
+
+  # C11 thread symbols.
+  GLIBC_2.28 {
+    thrd_create; thrd_detach; thrd_exit; thrd_join;
+    mtx_init; mtx_lock; mtx_timedlock; mtx_trylock; mtx_unlock; mtx_destroy;
+    call_once; cnd_broadcast; cnd_destroy; cnd_init; cnd_signal;
+    cnd_timedwait; cnd_wait; tss_create; tss_delete; tss_get; tss_set;
+  }
+
+  GLIBC_2.30 {
+    sem_clockwait; pthread_cond_clockwait;
+    pthread_rwlock_clockrdlock; pthread_rwlock_clockwrlock;
+    pthread_mutex_clocklock;
+  }
+
+  GLIBC_2.31 {
+    pthread_clockjoin_np;
+  }
+}
diff --git a/scripts/firstversions.awk b/scripts/firstversions.awk
index ccde4b59..16008b08 100644
--- a/scripts/firstversions.awk
+++ b/scripts/firstversions.awk
@@ -27,9 +27,16 @@ function vers_compare (v1, v2)
 }
 
 NF > 2 && $2 == ":" {
-  for (i = 0; i <= NF - 3; ++i)
+  for (i = 0; i <= NF - 3; ++i){
     firstversion[$1, i] = $(3 + i);
+    if ( $1 == "libpthread" ) {
+      firstversion["libpthread_in_libc", i] = $(3 + i);
+    }
+  }
   idx[$1] = 0;
+  if ( $1 == "libpthread" ) {
+    idx["libpthread_in_libc"] = 0;
+  }
   next;
 }
 
diff --git a/scripts/versions.awk b/scripts/versions.awk
index eeb7a106..6b30e745 100644
--- a/scripts/versions.awk
+++ b/scripts/versions.awk
@@ -89,7 +89,7 @@ function ord(c) {
   sortver=actver
   # Ensure GLIBC_ versions come always first
   sub(/^GLIBC_/," GLIBC_",sortver)
-  printf("%s %s %s\n", actlib, sortver, $0) | sort;
+  printf("%s %s %s\n", actlib == "libpthread_in_libc" ? "libc" : actlib, sortver, $0) | sort;
 }
 
 # Some targets do not set the ABI baseline for libdl.  As a result,
diff --git a/sunrpc/Makefile b/sunrpc/Makefile
index ec2ea04c..015be5be 100644
--- a/sunrpc/Makefile
+++ b/sunrpc/Makefile
@@ -22,7 +22,7 @@ subdir	:= sunrpc
 
 include ../Makeconfig
 
-ifdef have-GLIBC_2.31
+#ifdef have-GLIBC_2.31
 
 # The code in this subdirectory is taken from Sun's RPCSRC-4.0
 # distribution with some additional changes from the TI-RPC package
@@ -62,7 +62,7 @@ routines := auth_none authuxprot clnt_raw clnt_simp \
 	    rpc_gethostbyname
 # We only add the RPC for compatibility to libc.so.
 shared-only-routines = $(routines)
-endif
+#endif
 
 tests = tst-xdrmem tst-xdrmem2 test-rpcent tst-udp-error tst-udp-timeout \
   tst-udp-nonblocking tst-bug22542 tst-bug28768
diff --git a/sysdeps/nptl/Makeconfig b/sysdeps/nptl/Makeconfig
index 77aedd1e..963ad5d5 100644
--- a/sysdeps/nptl/Makeconfig
+++ b/sysdeps/nptl/Makeconfig
@@ -20,6 +20,7 @@
 
 have-thread-library = yes
 have-anl-library = $(have-GLIBC_2.34)
+have-anl-library = yes
 
 # The thread library is integrated.
 shared-thread-library =
diff --git a/sysdeps/unix/sysv/linux/loongarch/Versions b/sysdeps/unix/sysv/linux/loongarch/Versions
new file mode 100644
index 00000000..6b3dd0d1
--- /dev/null
+++ b/sysdeps/unix/sysv/linux/loongarch/Versions
@@ -0,0 +1,36 @@
+libc {
+  GLIBC_2.36 {
+    __ppoll_chk;
+    signalfd;
+    epoll_pwait2;
+    epoll_pwait;
+    pselect;
+    ppoll;
+    posix_spawnattr_getsigmask;
+    posix_spawnattr_getsigdefault;
+    posix_spawnattr_setsigmask;
+    posix_spawnattr_setsigdefault;
+    sigwaitinfo;
+    sigorset;
+    sigandset;
+    sigisemptyset;
+    sigismember;
+    sigaddset;
+    sigfillset;
+    sigemptyset;
+    sigdelset;
+    sigwait;
+    sigtimedwait;
+    __sigsuspend;
+    sigsuspend;
+    sigpending;
+    pthread_sigmask;
+    sigprocmask;
+    sigaction;
+    __sigaction;
+    swapcontext;
+    setcontext;
+    makecontext;
+    getcontext;
+  }
+}
diff --git a/sysdeps/unix/sysv/linux/loongarch/shlib-versions b/sysdeps/unix/sysv/linux/loongarch/shlib-versions
index 5f40e7f5..4f126b54 100644
--- a/sysdeps/unix/sysv/linux/loongarch/shlib-versions
+++ b/sysdeps/unix/sysv/linux/loongarch/shlib-versions
@@ -1,9 +1,2 @@
-DEFAULT		GLIBC_2.36
-
-%if LOONGARCH_ABI_GRLEN == 64 && LOONGARCH_ABI_FRLEN == 64
-ld=ld-linux-loongarch-lp64d.so.1
-%elif LOONGARCH_ABI_GRLEN == 64 && LOONGARCH_ABI_FRLEN == 0
-ld=ld-linux-loongarch-lp64s.so.1
-%else
-%error cannot determine ABI
-%endif
+DEFAULT		GLIBC_2.27 GLIBC_2.28 GLIBC_2.36
+libpthread=0    GLIBC_2.0 GLIBC_2.2 GLIBC_2.2.1 GLIBC_2.2.2 GLIBC_2.2.3 GLIBC_2.2.4 GLIBC_2.2.6 GLIBC_2.3 GLIBC_2.3.2 GLIBC_2.3.3 GLIBC_2.3.4 GLIBC_2.4 GLIBC_2.5 GLIBC_2.6 GLIBC_2.7 GLIBC_2.8 GLIBC_2.9 GLIBC_2.10 GLIBC_2.11 GLIBC_2.12 GLIBC_2.13 GLIBC_2.14 GLIBC_2.15 GLIBC_2.16 GLIBC_2.17 GLIBC_2.18 GLIBC_2.19 GLIBC_2.20 GLIBC_2.21 GLIBC_2.22 GLIBC_2.23 GLIBC_2.24 GLIBC_2.25 GLIBC_2.26 GLIBC_2.27 GLIBC_2.28 GLIBC_2.36
diff --git a/sysdeps/unix/sysv/linux/loongarch/statx_cp.c b/sysdeps/unix/sysv/linux/loongarch/statx_cp.c
new file mode 100644
index 00000000..3b57a461
--- /dev/null
+++ b/sysdeps/unix/sysv/linux/loongarch/statx_cp.c
@@ -0,0 +1,4 @@
+// We neet statx_cp for oldworld compaitibility.
+// So include it back and override the oerride in wordsize-64
+
+#include <sysdeps/unix/sysv/linux/statx_cp.c>
-- 
2.43.0

